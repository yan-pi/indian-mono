services:
  blog:
    build:
      context: .
      dockerfile: apps/blog/Dockerfile
    ports:
      - "3002:3000"  # Map host port 3002 to container port 3000
    networks:
      - app-network
    restart: unless-stopped

  quartz:
    build:
      context: .
      dockerfile: apps/quartz/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped
  # admin:
  #   build:
  #     context: .
  #     dockerfile: apps/admin/Dockerfile
  #   env_file:
  #     - ./apps/admin/.env
  #   ports:
  #     - "3001:3000"  # Map host port 3001 to container port 3000
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   volumes:
  #     - ./apps/admin/uploads:/app/apps/admin/uploads
  #   restart: unless-stopped
  #
  # web:
  #   build:
  #     context: .
  #     dockerfile: apps/web/Dockerfile
  #   env_file:
  #     - ./apps/web/.env
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - admin
  #   networks:
  #     - app-network
  #   restart: unless-stopped

#   mongodb:
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongodb_data:/data/db
#     networks:
#       - app-network
#     healthcheck:
#       test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
#       interval: 10s
#       timeout: 10s
#       retries: 5
#       start_period: 40s
#     restart: unless-stopped
#
# volumes:
#   mongodb_data:

networks:
  app-network:
    driver: bridge
